# Информация о проекте
# # Необходимо написать проект, содержащий функционал работы с заметками. Программа 
#должна уметь создавать заметку, сохранять её, читать список заметок, редактировать 
#заметку, удалять заметку.
# 
# Как сдавать проект
# # # Для сдачи проекта необходимо создать отдельный общедоступный репозиторий 
#(Github, gitlub, или Bitbucket). Разработку вести в этом репозитории, использовать 
#пул реквесты на изменения. Программа должна запускаться и работать, ошибок при 
#выполнении программы быть не должно.
# 
# Критерии оценки
# # # Приложение должно запускаться без ошибок, должно уметь сохранять данные в 
#файл, уметь читать данные из файла, делать выборку по дате, выводить на экран 
#выбранную запись, выводить на экран весь список записок, добавлять записку, 
#редактировать ее и удалять.
# 
# Реализовать консольное приложение заметки, с сохранением, чтением, добавлением, 
#редактированием и удалением заметок.
# 
# Заметка должна содержать идентификатор, заголовок, тело заметки и дату/время 
#создания или последнего изменения заметки.
# 
# # # # Сохранение заметок необходимо сделать в формате json или csv формат 
#(разделение полей рекомендуется делать через точку с запятой). Реализацию 
#пользовательского интерфейса студент может делать как ему удобнее, можно делать как 
#параметры запуска программы (команда, данные), можно делать как запрос команды с 
#консоли и последующим вводом данных, как-то ещё, на усмотрение студента.


from datetime import datetime
import uuid

class Note:
    def __init__(self, id = str(uuid.uuid1())[0:3],  title = "текст", body = 
"текст", date = str(datetime.now().strftime("%d.%m.%Y %H:%M:%S"))):
        self.id = id
        self.title = title
        self.body = body
        self.date = date

    def get_id(note):
        return note.id

    def get_title(note):
        return note.title

    def get_body(note):
        return note.body

    def get_date(note):
        return note.date

    def set_id(note):
        note.id = str(uuid.uuid1())[0:3]

    def set_title(note, title):
        note.title = title

    def set_body(note, body):
        note.body = body

    def set_date(note):
        note.date = str(datetime.now().strftime("%d.%m.%Y %H:%M:%S"))

    def to_string(note):
        return note.id + ';' + note.title + ';' + note.body + ';' + note.date

    def map_notes(note):
        return '\nID: ' + note.id + '\n' + 'Название: ' + note.title + '\n' +'Описание: ' + note.body + '\n' + 'Дата публикации: ' + note.date